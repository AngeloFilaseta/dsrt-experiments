# result:
#  {0 13, 1 $,  2 $, 3  $,
#   4 $, 5 $,  6 $,  7  $,
#   8 $, 9 $, 10 $, 11 13}

network-model:
  type: ConnectWithinDistance
  parameters: [2.5]

variables:
  seed: &seed
    min: 0
    max: 20
    step: 1
    default: 0
  radius: &leaderRadius
    type: ArbitraryVariable
    parameters: [12.0, [12.0, 15.0, 17.5, 21.5]]
  initialResource: &initialResource
    type: ArbitraryVariable
    parameters: [500, [100, 300, 500, 1000]]
  resourceTh: &resourceTh
    type: ArbitraryVariable
    parameters: [200, [50, 200, 300, 500 ] ]
  cloningRatio: &cloningRatio
    type: ArbitraryVariable
    parameters: [ 500, [100, 300, 500, 1000]]

seeds:
  scenario: *seed
  simulation: *seed

layers:
  - type: SuccessSourceLayer
    parameters: [10.0, 10.0, 40.0, 10.0]
    molecule: successSource

incarnation: collektive

_pool: &program
  - time-distribution: 1
    type: Event
    actions:
      - type: RunCollektiveProgram
        parameters: [it.unibo.collektive.lib.ConvergeAndSpreadKt.vmc]
  - time-distribution: 1
    type: Event
    actions:
      - type: CloningAction
        parameters: [it.unibo.alchemist.actions.CloningAction]

deployments:
  - type: Rectangle
    parameters: [ 10, 0, 0, 20, 20 ]
    programs:
      - *program
    contents:
      - molecule: leaderRadius
        concentration: *leaderRadius
      - molecule: leaderRadius
        concentration: *initialResource
      - molecule: resourceTh
        concentration: *resourceTh
      - molecule: cloningRatio
        concentration: *cloningRatio
      - molecule: source
        concentration: false
    properties:
      - type: it.unibo.collektive.alchemist.device.sensors.RandomNodeProperty
      - type: it.unibo.collektive.alchemist.device.sensors.LayerProperty
#
#displacements:
#  - in:
#      type: Grid
#      parameters: [0, 0, 3, 2, 1, 1, 0.1, 0.1]
#    programs:
#      - *program